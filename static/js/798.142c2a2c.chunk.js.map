{"version":3,"file":"static/js/798.142c2a2c.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","redux/contacts/selectors.js","components/ContactForm/styles.js","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","components/ContactList/styles.js","components/ContactList/ContactList.jsx","components/Filter/styles.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 10px;\n  width: 400px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n`;\n\nexport const AddButton = styled.button`\n  font-size: 18px;\n  margin-top: 25px;\n  padding: 10px;\n\n  &:focus,\n  :hover {\n    cursor: pointer;\n    background-color: #300df5;\n    color: white;\n    border-radius: 5px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport { TextField } from '@mui/material';\nimport styled from 'styled-components';\nimport { Form, Label, AddButton } from './styles';\n\nconst Input = styled(TextField)`\n  font-size: 22px;\n`;\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"primary\"\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"primary\"\n        />\n        <AddButton type=\"submit\" variant=\"contained\" size=\"medium\">\n          Add contact\n        </AddButton>\n      </Form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","export const selectFilter = state => state.filter.filter;","import styled from 'styled-components';\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const List = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n  margin-right: 20px;\n`;\n\nexport const Click = styled.button`\n  font-size: 20px;\n  padding: 5px;\n\n  &:focus,\n  :hover {\n    cursor: pointer;\n    background-color: #300df5;\n    color: white;\n    border-radius: 5px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { selectFilter } from '../../redux/filter/selectors';\nimport { Item, List, Click } from './styles';\n\nconst ContactList = ({ children }) => {\n  const filtersContacts = (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const contactsList = filtersContacts(contacts, filter);\n\n  return (\n    <>\n      <div>\n        <h2>Contacts</h2>\n        {children}\n        <ul>\n          {contactsList.map(({ name, number, id }) => (\n            <li key={id}>\n              <Item>\n                <List>{name}:</List>\n                <List>{number}</List>\n                <Click\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(id))}\n                >\n                  Delete\n                </Click>\n              </Item>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FindContact = styled.p`\n  font-size: 22px;\n`;\n\nexport const Input = styled.input`\n  font-size: 22px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { TextField } from '@mui/material';\nimport { FindContact } from './styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <FindContact>Find contacts by name</FindContact>\n      <TextField\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n        variant=\"outlined\"\n        size=\"small\"\n        color=\"primary\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","selectContacts","state","contacts","Form","styled","Label","AddButton","Input","TextField","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","contact","toLowerCase","toast","addContact","htmlFor","type","pattern","title","required","onChange","variant","color","selectFilter","filter","Item","List","Click","children","contactsList","includes","filtersContacts","map","onClick","deleteContact","FindContact","target","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}